<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Kylin's Blog]]></title>
  <subtitle><![CDATA[Code left, life right]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://kylinv.com/"/>
  <updated>2015-11-05T15:35:38.000Z</updated>
  <id>http://kylinv.com/</id>
  
  <author>
    <name><![CDATA[Kylin]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[FreeMarker入门小教程]]></title>
    <link href="http://kylinv.com/2015/11/05/FreeMarker%E5%85%A5%E9%97%A8%E5%B0%8F%E6%95%99%E7%A8%8B/"/>
    <id>http://kylinv.com/2015/11/05/FreeMarker入门小教程/</id>
    <published>2015-11-05T15:23:18.000Z</published>
    <updated>2015-11-05T15:35:38.000Z</updated>
    <content type="html"><![CDATA[<p>这个教程是使用 FreeMarker 框架写一个简单的 Hello 的小页面。因为是第一次接触框架也是第一次使用 Eclipse 这个软件所以教程写的有点繁琐。<br>FreeMarker是一个用Java语言编写的模板引擎，它基于模板来生成文本输出。原理如下图：</p>
<p><img src="http://7xnl4x.com1.z0.glb.clouddn.com/principle.png" alt="principle">  </p>
<h2 id="项目结构：">项目结构：</h2><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">－项目名称  </span><br><span class="line"><span class="string">|-- Java Resources  </span></span><br><span class="line">   <span class="string">|-- SRC            //JAVA存放目录</span></span><br><span class="line">   <span class="string">|-- Libraries</span></span><br><span class="line"><span class="string">|-- WebContent        //WEB文件目录</span></span><br><span class="line">   <span class="string">|-- WEB-INF</span></span><br><span class="line">      <span class="string">|-- lib         //jar包目录</span></span><br><span class="line">      <span class="string">|-- templates   //ftl文件目录</span></span><br><span class="line">      <span class="string">|-- web.xml     //WEB配置文件</span></span><br></pre></td></tr></table></figure>
<p>大概就是酱紫的：  </p>
<p><img src="http://7xnl4x.com1.z0.glb.clouddn.com/content.png" alt="content">   </p>
<p>话不多说，那就开始吧～  </p>
<h2 id="步骤：">步骤：</h2><h3 id="Step1:创建一个_Web_项目：">Step1:创建一个 Web 项目：</h3><p>File - New - Dynamic Web Project<br>如果下拉菜单里没有 Dynamic Web Project 选项，则选择 Other - Web ,找到 Dynamic Web Project 选项。点击以后如下图：（ Target runtime 默认的为 none，点击 New Runtime 设置 ）   </p>
<p><img src="http://7xnl4x.com1.z0.glb.clouddn.com/createPro.png" alt="d">  </p>
<p>选择之前安装好的 Tomcat v8.0 然后点击下一步，如下图：  </p>
<p><img src="http://7xnl4x.com1.z0.glb.clouddn.com/chooseTomcat.png" alt="chooseTomcat">   </p>
<p>选择 Tomcat installation directory , 点击右侧的 Browse… ,如下图：  </p>
<p><img src="http://7xnl4x.com1.z0.glb.clouddn.com/chooseTomcat2.png" alt="chooseTomcat2">  </p>
<p>找到之前你安装 Tomcat 的路径，例如我是安装在 Library 里的： 选择 Macintonsh HD ,找到资源库，再找到 Tomcat 文件夹，点击打开。如下图：  </p>
<p><img src="http://7xnl4x.com1.z0.glb.clouddn.com/chooseTomcat3.png" alt="chooseTomcat3">  </p>
<p>最后点击 Fnish ，完成 Target runtime 的新建，回到新建项目的界面。再点击 Fnish 完成 Web 项目的建立。  </p>
<h3 id="Step2:导入_FreeMarker_jar_包">Step2:导入 FreeMarker jar 包</h3><p>将从官网上下载的 FreeMarker.jar 包导入到 WEB-INF 目录下的 Lib 文件夹内，拖进去就可以啦。  </p>
<h3 id="Step3:创建_ftl_模板文件">Step3:创建 ftl 模板文件</h3><p>在 WEB-INF 目录下新建一个名为 templates 的模板文件夹，然后在里面建立 ftl 文件。<br>代码如下：（ftl 文件名为test.ftl）  </p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">html</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="title">head</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="title">title</span>&gt;</span>FreeMarker测试<span class="tag">&lt;/<span class="title">title</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="title">head</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="title">body</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="title">h1</span>&gt;</span>Hello,$&#123;name&#125;<span class="tag">&lt;/<span class="title">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">#if</span> <span class="attribute">name</span> =<span class="value">=</span> "<span class="attribute">Kylin</span>"&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">h2</span>&gt;</span>Happy birthday ~ <span class="tag">&lt;/<span class="title">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">#if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">p</span>&gt;</span>This is a FreeMarker demo.  </span><br><span class="line">    <span class="tag">&lt;/<span class="title">body</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="Step4:新建一个Servlet，用于请求设置变量，并处理模板的输出">Step4:新建一个Servlet，用于请求设置变量，并处理模板的输出</h3><p>在 Java Resources 目录下的 src 文件夹下新建 Servlet ，然后创建 class 。<br>java代码如下：(Servlet 名为：com.test.servlet，java文件名为：HelloFreeMarkerServlet )  </p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.test.servlet;  </span><br><span class="line"><span class="keyword">import</span> java.io.IOException;  </span><br><span class="line"><span class="keyword">import</span> java.io.Writer;  </span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;  </span><br><span class="line"><span class="keyword">import</span> java.util.Map;  </span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;  </span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;  </span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;  </span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;  </span><br><span class="line"><span class="keyword">import</span> freemarker.template.Configuration;  </span><br><span class="line"><span class="keyword">import</span> freemarker.template.Template;  </span><br><span class="line"><span class="keyword">import</span> freemarker.template.TemplateException;  </span><br><span class="line"><span class="annotation">@SuppressWarnings</span>(<span class="string">"serial"</span>)  </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloFreeMarkerServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;  </span><br><span class="line">    <span class="comment">// 负责管理FreeMarker模板的Configuration实例  </span></span><br><span class="line">    <span class="keyword">private</span> Configuration cfg = <span class="keyword">null</span>;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> <span class="keyword">throws</span> ServletException </span>&#123;  </span><br><span class="line">        <span class="comment">// 创建一个FreeMarker实例  </span></span><br><span class="line">        cfg = <span class="keyword">new</span> Configuration();  </span><br><span class="line">        <span class="comment">// 指定FreeMarker模板文件的位置  </span></span><br><span class="line">        cfg.setServletContextForTemplateLoading(getServletContext(),  </span><br><span class="line">                <span class="string">"/WEB-INF/templates"</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="annotation">@SuppressWarnings</span>(<span class="string">"unchecked"</span>)  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span>  </span><br><span class="line">            <span class="keyword">throws</span> ServletException, IOException </span>&#123;  </span><br><span class="line">        <span class="comment">// 建立数据模型  </span></span><br><span class="line">        Map root = <span class="keyword">new</span> HashMap();    </span><br><span class="line">        root.put(<span class="string">"name"</span>, <span class="string">"Kylin"</span>);  </span><br><span class="line">        <span class="comment">// 获取模板文件  </span></span><br><span class="line">        Template t = cfg.getTemplate(<span class="string">"test.ftl"</span>);  </span><br><span class="line">        <span class="comment">// 使用模板文件的Charset作为本页面的charset  </span></span><br><span class="line">        <span class="comment">// 使用text/html MIME-type  </span></span><br><span class="line">        response.setContentType(<span class="string">"text/html; charset="</span> + t.getEncoding());  </span><br><span class="line">        Writer out = response.getWriter();  </span><br><span class="line">        <span class="comment">// 合并数据模型和模板，并将结果输出到out中  </span></span><br><span class="line">        <span class="keyword">try</span> &#123;  </span><br><span class="line">            t.process(root, out); <span class="comment">// 往模板里写数据  </span></span><br><span class="line">        &#125; <span class="keyword">catch</span> (TemplateException e) &#123;  </span><br><span class="line">            e.printStackTrace();  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span>  </span><br><span class="line">            <span class="keyword">throws</span> ServletException, IOException </span>&#123;  </span><br><span class="line">        doPost(request, response);  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">        <span class="keyword">super</span>.destroy();  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>注意要在 web.xml 中配置该 Servlet ：<br>XML 代码如下：(XML 文件置于 WEB-INF 目录下)  </p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="title">web-app</span> <span class="attribute">version</span>=<span class="value">"2.5"</span> <span class="attribute">xmlns</span>=<span class="value">"http://java.sun.com/xml/ns/javaee"</span>  </span><br><span class="line">    <span class="attribute">xmlns:xsi</span>=<span class="value">"http://www.w3.org/2001/XMLSchema-instance"</span>  </span><br><span class="line">    <span class="attribute">xsi:schemaLocation</span>=<span class="value">"http://java.sun.com/xml/ns/javaee   </span><br><span class="line">    http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="title">servlet</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="title">servlet-name</span>&gt;</span>hello<span class="tag">&lt;/<span class="title">servlet-name</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="title">servlet-class</span>&gt;</span>  </span><br><span class="line">            com.test.servlet.HelloFreeMarkerServlet  </span><br><span class="line">        <span class="tag">&lt;/<span class="title">servlet-class</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="title">servlet</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="title">servlet-mapping</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="title">servlet-name</span>&gt;</span>hello<span class="tag">&lt;/<span class="title">servlet-name</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="title">url-pattern</span>&gt;</span>/hello<span class="tag">&lt;/<span class="title">url-pattern</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="title">servlet-mapping</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="title">welcome-file-list</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="title">welcome-file</span>&gt;</span>index.jsp<span class="tag">&lt;/<span class="title">welcome-file</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="title">welcome-file-list</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="title">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="Step4:_修改_index-jsp_文件">Step4: 修改 index.jsp 文件</h3><p>为了方便测试，访问工程直接跳转到 Servlet ,对主页 index.jsp 做一个简单的修改，代码如下：  </p>
<figure class="highlight vbscript-html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="vbscript">&lt;%@ page language=<span class="string">"java"</span> import=<span class="string">"java.util.*"</span> pageEncoding=<span class="string">"UTF-8"</span>%&gt;</span><span class="xml">  </span><br><span class="line"></span><span class="vbscript">&lt;%  </span><br><span class="line"><span class="built_in">String</span> path = <span class="built_in">request</span>.getContextPath();  </span><br><span class="line"><span class="built_in">String</span> basePath = <span class="built_in">request</span>.getScheme()+<span class="string">"://"</span>+<span class="built_in">request</span>.getServerName()  </span><br><span class="line">+<span class="string">":"</span>+<span class="built_in">request</span>.getServerPort()+path+<span class="string">"/"</span>;  </span><br><span class="line">%&gt;</span><span class="xml">  </span><br><span class="line"><span class="tag">&lt;<span class="title">html</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="title">body</span>&gt;</span>  </span><br><span class="line">    </span><span class="vbscript">&lt;%  </span><br><span class="line">    <span class="built_in">String</span> mypath = <span class="string">"hello"</span>;  </span><br><span class="line">    <span class="built_in">response</span>.sendRedirect(basePath + mypath);  </span><br><span class="line">    %&gt;</span><span class="xml">  </span><br><span class="line">  <span class="tag">&lt;/<span class="title">body</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<h3 id="Step5:将项目部署到_Tomcat_上">Step5:将项目部署到 Tomcat 上</h3><p>右击项目名称，选择 Run As - Run on Server ,选择 Tomcat ,点击 finish 。如图：  </p>
<p><img src="http://7xnl4x.com1.z0.glb.clouddn.com/run.png" alt="run"></p>
<h3 id="成功～">成功～</h3><p><img src="http://7xnl4x.com1.z0.glb.clouddn.com/success.png" alt="success"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>这个教程是使用 FreeMarker 框架写一个简单的 Hello 的小页面。因为是第一次接触框架也是第一次使用 Eclipse 这个软件所以教程写的有点繁琐。<br>FreeMarker是一个用Java语言编写的模板引擎，它基于模板来生成文本输出。原理如下图：</p>
<]]>
    </summary>
    
      <category term="FreeMarker" scheme="http://kylinv.com/tags/FreeMarker/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Eclipse之配置Tomcat]]></title>
    <link href="http://kylinv.com/2015/11/05/Eclipse%E4%B9%8B%E9%85%8D%E7%BD%AETomcat/"/>
    <id>http://kylinv.com/2015/11/05/Eclipse之配置Tomcat/</id>
    <published>2015-11-05T15:09:45.000Z</published>
    <updated>2015-11-05T15:21:45.000Z</updated>
    <content type="html"><![CDATA[<h1 id="Tomcat_安装">Tomcat 安装</h1><h2 id="简介：">简介：</h2><p>Tomcat是一个 Web 应用服务器。  </p>
<p>P.s :关于 Apache 和 Tomcat 的区别：  </p>
<ul>
<li>Apache 是 Web 服务器，Tomcat 是应用（java）服务器，它是一个 servlet 容器，是 Apache 的扩展。  </li>
<li>Apache 和 Tomcat 都可以作为独立的 Web 服务器来运行，但是 Apache 是普通服务器，本身只支持 HTML 即普通网页，不能解释 java 程序（jsp,servlet）（需要插件）。<blockquote>
<p>可以将 Apache 看作是一辆卡车，上面可以装一些东西，比如 HTML 等，但是不能装水，要装水需要有容器，Tomcat 就是一个容器，这个桶可以装水，而且也可以不放在卡车上。   </p>
</blockquote>
</li>
<li>Apache 只支持静态网页，像 asp,php,cgi,jsp等动态网页就需要 Tomcat 来处理。</li>
<li>Tomcat 处理静态 HTML 的能力不如 Apache。 </li>
</ul>
<p>P.P.s: WAMP = Windows + Apache + Myscql + PHP  </p>
<h2 id="安装：">安装：</h2><p>在官网下载 Tomcat 包，将文件夹命名为 Tomcat，并移动到根目录 /Library 中（可以选择其他的路径）。<br>Tips :选择 Finder “前往”下拉菜单，按住 option 键就会出现“资源库”的选项。<br>打开终端，执行  </p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo sh <span class="regexp">/Library/</span>Tomcat<span class="regexp">/bin/</span>startup.sh</span><br></pre></td></tr></table></figure>
<p>作为拥有易报错体质的我，系统当然不会那么轻易地放过我，系统提示： No such file or directory。<br>好吧，让我们设置下文件权限：</p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">sudo</span> chmod <span class="number">755</span> Library/Tomcat/bin/<span class="regexp">*.sh</span></span><br><span class="line">sudo chmod <span class="number">755</span> Library/Tomcat/bin/<span class="regexp">*.bat</span></span><br><span class="line">然后再次执行：</span><br><span class="line">sudo sh /Library/Tomcat/bin/startup.sh</span><br></pre></td></tr></table></figure>
<p>当出现下图时则表明 Tomcat 执行成功  </p>
<p><img src="http://7xnl4x.com1.z0.glb.clouddn.com/startup.png" alt="startup">    </p>
<p>这个时候打开浏览器，在地址栏输入：localhost：8080 会出现一个类似的界面<br><img src="http://7xnl4x.com1.z0.glb.clouddn.com/tomcat.png" alt="tomcat">  </p>
<p>到此为止 Tomcat 就安装成功了。关闭只需在终端输入： </p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo sh <span class="regexp">/Library/</span>Tomcat<span class="regexp">/bin/</span>shutdown.sh</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="Tomcat_安装">Tomcat 安装</h1><h2 id="简介：">简介：</h2><p>Tomcat是一个 Web 应用服务器。  </p>
<p>P.s :关于 Apache 和 Tomcat 的区别：  </p>
<ul>
<li>Apache 是 ]]>
    </summary>
    
      <category term="Tomcat" scheme="http://kylinv.com/tags/Tomcat/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hexo 教程]]></title>
    <link href="http://kylinv.com/2015/10/17/hexo/"/>
    <id>http://kylinv.com/2015/10/17/hexo/</id>
    <published>2015-10-17T03:02:03.000Z</published>
    <updated>2015-10-17T05:48:48.000Z</updated>
    <content type="html"><![CDATA[<p>这两天用 Hexo 搭建了自己的博客，期间跌跌撞撞出现了很多问题（总感觉自己有容易报错的体质，o(╯□╰)o），所以打算写个啰啰嗦嗦的教程，以便于自己日后去看。就酱！  </p>
<h2 id="安装">安装</h2><p>在安装 Hexo 之前，需要先确认电脑中是否已安装下列程序： </p>
<ul>
<li>Node.js  </li>
<li>Git   </li>
</ul>
<p>如果没有安装，可以移步 <a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="external">hexo安装</a> </p>
<p>接着，就可以安装 Hexo 啦~<br>打开终端，啪啪啪输入  </p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm <span class="operator"><span class="keyword">install</span> -<span class="keyword">g</span> hexo-cli</span></span><br></pre></td></tr></table></figure>
<p>然而，报错了  </p>
<p><img src="http://7xnl4x.com1.z0.glb.clouddn.com/installError.jpg" alt="权限错误">  </p>
<p>系统说：“No, 你不是管理员。”<br>好吧，加上 sudo 再试一次，这次安装的时候会提示让你输入密码。 </p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo npm <span class="operator"><span class="keyword">install</span> -<span class="keyword">g</span> hexo-cli</span></span><br></pre></td></tr></table></figure>
<p>安装成功啦~</p>
<h2 id="建站">建站</h2><p>安装 Hexo 完成后，执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。  </p>
<figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>hexo init &lt;folder&gt;   <span class="regexp">//</span>例如：<span class="variable">$ </span>hexo init myblog，如果没有设置 folder ，<span class="constant">Hexo</span> 就会默认在当前文件夹建立网站啦</span><br><span class="line"><span class="variable">$ </span>cd &lt;folder&gt;</span><br><span class="line"><span class="variable">$ </span>npm install</span><br></pre></td></tr></table></figure>
<p>新建完成后，myblog 文件夹的目录如下：  </p>
<figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">|<span class="string">-- _config.yml    //这里放着网站的配置信息，可以在此配置大部分参数</span><br><span class="line"></span>|<span class="string">-- package.json   //应用程序的信息</span><br><span class="line"></span>|<span class="string">-- scaffolds      //模板文件夹，当新建文章时，Hexo 会根据 scaffold 来建立文件</span><br><span class="line"></span>|<span class="string">-- scripts        //脚本文件夹，此文件夹中的 JavaScript 文件会被自动执行</span><br><span class="line"></span>|<span class="string">-- source         //存放用户资源。除了 _posts 文件夹之外，开头命名为 _ 的文件/文件夹和隐藏的文件会被忽略。</span><br><span class="line"></span>|<span class="string">   </span>|<span class="string">-- _drafts    </span><br><span class="line"></span>|<span class="string">   </span>|<span class="string">-- _posts     </span><br><span class="line"></span>|<span class="string">-- themes         //主题文件夹。Hexo 会根据主题来生成静态页面。</span></span><br></pre></td></tr></table></figure>
<p>接下来就开始配置你的网站信息。打开 myblog下的 _config.yml 文件  </p>
<figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># Site</span></span><br><span class="line"><span class="label">title:</span>             //给你的博客取一个喜欢的名字叭</span><br><span class="line"><span class="label">subtitle:</span>          //加个副标题怎么样</span><br><span class="line"><span class="label">description:</span>       //这个是给搜索引擎看的</span><br><span class="line"><span class="label">author:</span>            //写上你的大名</span><br><span class="line"><span class="label">language:</span></span><br><span class="line"><span class="label">timezone:</span></span><br></pre></td></tr></table></figure>
<p>如果想查看关于 _config.yml 的详细信息，请移步 <a href="https://hexo.io/zh-cn/docs/configuration.html" target="_blank" rel="external">Hexo配置</a>  </p>
<p>修改完后，就让我们在本地预览一下，首先在建立网站的文件夹目录下打开终端，然后输入：  </p>
<figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g        <span class="comment">//生成静态文件</span></span><br><span class="line">$ hexo <span class="keyword">server</span>   <span class="comment">//启动服务器</span></span><br></pre></td></tr></table></figure>
<p>现在，打开浏览器输入 localhost：4000 ，就可以在本地预览啦~ 默认主题是这个样子的。（图是网上找的）  </p>
<p><img src="http://7xnl4x.com1.z0.glb.clouddn.com/landscape.png" alt="landscape">  </p>
<p>当然，这个时候别人是看不到的。可是，搭博客怎么能只给自己看呢，让我们把它部署到 GitHub 上去吧。  </p>
<h2 id="部署">部署</h2><p>首先注册一个 GitHub 的账号。然后，创建一个库（Repository），完成以后会出现类似下图的一个界面：</p>
<p><img src="http://7xnl4x.com1.z0.glb.clouddn.com/repository.png" alt="reposity">  </p>
<p>仍然是在 myblog 目录下打开终端，这次我们要安装 hexo-deployer-git 。  </p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm <span class="operator"><span class="keyword">install</span> hexo-deployer-git <span class="comment">--save</span></span></span><br></pre></td></tr></table></figure>
<p>安装完成后，打开 myblog下的 _config.yml 文件修改配置:    </p>
<figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">## Docs: http:<span class="comment">//hexo.io/docs/deployment.html</span></span><br><span class="line">deploy:</span><br><span class="line">  <span class="keyword">type</span>: git</span><br><span class="line">  repo: &lt;repository url&gt;  <span class="comment">//就是刚刚在 GitHub 上创建的库的地址啦</span></span><br><span class="line">  branch: [branch]        <span class="comment">//使用 GitHub 或 GitCafe 的话，系统会自动检测，这里不用填</span></span><br><span class="line">  <span class="keyword">message</span>: [<span class="keyword">message</span>]      <span class="comment">//自定义提交信息（默认为 Site updated: &#123;&#123; now("YYY-MM-DD HH:mm:ss") &#125;&#125; ）,同样可以不填</span></span><br></pre></td></tr></table></figure>
<p>接着执行下列指令：  </p>
<figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>hexo g</span><br><span class="line"><span class="variable">$ </span>hexo d</span><br></pre></td></tr></table></figure>
<p>当当当，浏览器访问 kylinv.github.io/myblog 就可以看到刚刚搭建的网站啦~(≧▽≦)/~<br>等等，似乎哪里不太对劲Σ(⊙▽⊙” ，命令失败了，页面打不开。哦，我还没有设置 SSH 。</p>
<figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C <span class="string">"email"</span> <span class="comment">//输入你注册GitHub时的邮箱地址</span></span><br></pre></td></tr></table></figure>
<p>输完以后一路回车，直到出现一大段文字，其中有：</p>
<p><img src="http://7xnl4x.com1.z0.glb.clouddn.com/ssh.png" alt="set ssh">   </p>
<p>打开 id_rsa.pub 文件，复制里面的内容。<br>然后浏览器打开 GitHub ，登录后找到 setting - SSH keys - Add SSH key ，把刚刚复制的内容粘贴到 key 里面。<br>再试一次</p>
<figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>hexo g</span><br><span class="line"><span class="variable">$ </span>hexo d</span><br></pre></td></tr></table></figure>
<p>浏览器访问 kylinv.github.io/myblog ，这次可以看到页面了，然而。。。</p>
<p><img src="http://7xnl4x.com1.z0.glb.clouddn.com/root.png" alt="root"><br>样式呢？样式呢？看看报错：</p>
<p><img src="http://7xnl4x.com1.z0.glb.clouddn.com/nocss.png" alt="nocss">   </p>
<p>这是因为在 _config.yml 文件中，</p>
<p><img src="http://7xnl4x.com1.z0.glb.clouddn.com/errorroot.png" alt="errorroot">  </p>
<p>而事实上网站的文件都在 myblog 下，所以要把 root：设成 /blog/ 。当然这里可以不更改，因为我们还要把自己的域名和 GitHub 绑定。</p>
<h2 id="绑定">绑定</h2><p>首先，购买一个域名。<br>在 source 目录下添加 CNAME 文件，打开，在里面写上自己的域名。<br>然后解析域名。  </p>
<p><img src="http://7xnl4x.com1.z0.glb.clouddn.com/yuming.png" alt="yuming">  </p>
<p>查看记录值的方式，在终端中输入 ping + 网址（kylinv.github.io） ，会返回一个地址，把它复制粘贴到记录值中。<br>其他的看购买域名的网站上的一步步指引就可以啦~<br>当然，不要忘了把 CNAME 文件传到 GitHub 上去。囧</p>
<p>最后，就是这个样子的。  </p>
<p><img src="http://7xnl4x.com1.z0.glb.clouddn.com/myblog.png" alt="myblog"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>这两天用 Hexo 搭建了自己的博客，期间跌跌撞撞出现了很多问题（总感觉自己有容易报错的体质，o(╯□╰)o），所以打算写个啰啰嗦嗦的教程，以便于自己日后去看。就酱！  </p>
<h2 id="安装">安装</h2><p>在安装 Hexo 之前，需要先确认电脑中是否已安装]]>
    </summary>
    
      <category term="hexo" scheme="http://kylinv.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hello World]]></title>
    <link href="http://kylinv.com/2015/10/15/hello-world/"/>
    <id>http://kylinv.com/2015/10/15/hello-world/</id>
    <published>2015-10-15T13:22:27.000Z</published>
    <updated>2015-10-15T13:22:27.000Z</updated>
    <content type="html"><![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick_Start">Quick Start</h2><h3 id="Create_a_new_post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run_server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate_static_files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy_to_remote_sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io]]>
    </summary>
    
  </entry>
  
</feed>
